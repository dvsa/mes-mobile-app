export var AnalyticsScreenNames;
(function (AnalyticsScreenNames) {
    AnalyticsScreenNames["COMMUNICATION"] = "communication screen";
    AnalyticsScreenNames["HEALTH_DECLARATION"] = "health declaration screen";
    AnalyticsScreenNames["JOURNAL"] = "journal screen";
    AnalyticsScreenNames["PASS_TEST_SUMMARY"] = "pass test summary screen";
    AnalyticsScreenNames["FAIL_TEST_SUMMARY"] = "fail test summary screen";
    AnalyticsScreenNames["PASS_FINALISATION"] = "pass finalisation screen";
    AnalyticsScreenNames["TEST_REPORT"] = "test report screen";
    AnalyticsScreenNames["TERMINATE_TEST"] = "terminate test screen";
    AnalyticsScreenNames["WAITING_ROOM"] = "waiting room screen";
    AnalyticsScreenNames["WAITING_ROOM_TO_CAR"] = "waiting room to car screen";
    AnalyticsScreenNames["WELCOME"] = "welcome screen";
    AnalyticsScreenNames["CANDIDATE_DETAILS"] = "candidate details screen";
    AnalyticsScreenNames["PASS_DEBRIEF"] = "pass debrief screen";
    AnalyticsScreenNames["FAIL_DEBRIEF"] = "fail debrief screen";
    AnalyticsScreenNames["LOGIN"] = "login screen";
    AnalyticsScreenNames["BACK_TO_OFFICE"] = "back to office screen";
    AnalyticsScreenNames["TEST_RESULTS_SEARCH"] = "test result search screen";
    AnalyticsScreenNames["VIEW_TEST_RESULT"] = "view test result screen";
    AnalyticsScreenNames["POST_DEBRIEF_HOLDING"] = "post debrief holding screen";
    AnalyticsScreenNames["NON_PASS_FINALISATION"] = "non pass finalisation";
    AnalyticsScreenNames["REKEY_SEARCH"] = "rekey search screen";
    AnalyticsScreenNames["REKEY_REASON"] = "rekey reason screen";
    AnalyticsScreenNames["REKEY_UPLOADED"] = "rekey uploaded screen";
    AnalyticsScreenNames["DASHBOARD"] = "dashboard screen";
    AnalyticsScreenNames["VEHICLE_CHECKS"] = "vehicle checks screen";
    AnalyticsScreenNames["REVERSE_DIAGRAM"] = "reverse diagram screen";
})(AnalyticsScreenNames || (AnalyticsScreenNames = {}));
export var AnalyticsEventCategories;
(function (AnalyticsEventCategories) {
    AnalyticsEventCategories["CLICK"] = "click";
    AnalyticsEventCategories["TEST_LIFECYCLE"] = "test lifecycle";
    AnalyticsEventCategories["ERROR"] = "error";
    AnalyticsEventCategories["JOURNAL"] = "journal";
    AnalyticsEventCategories["AUTHENTICATION"] = "authentication";
    AnalyticsEventCategories["BACK_TO_OFFICE"] = "back to office";
    AnalyticsEventCategories["POST_TEST"] = "post-test";
    AnalyticsEventCategories["TEST_REPORT"] = "test report";
    AnalyticsEventCategories["TERMINATION"] = "test termination";
    AnalyticsEventCategories["PRACTICE_TEST"] = "practice test";
    AnalyticsEventCategories["PRACTICE_MODE"] = "practice mode";
    AnalyticsEventCategories["TEST_RESULTS_SEARCH"] = "test results search";
    AnalyticsEventCategories["REKEY_SEARCH"] = "rekey search";
    AnalyticsEventCategories["REKEY"] = "rekey";
    AnalyticsEventCategories["VEHICLE_CHECKS"] = "vehicle checks";
    AnalyticsEventCategories["WAITING_ROOM"] = "waiting room";
    AnalyticsEventCategories["WAITING_ROOM_TO_CAR"] = "waiting room to car";
    AnalyticsEventCategories["OFFICE"] = "office";
    AnalyticsEventCategories["DELEGATED_TEST"] = "DelExRk";
})(AnalyticsEventCategories || (AnalyticsEventCategories = {}));
export var AnalyticsEvents;
(function (AnalyticsEvents) {
    AnalyticsEvents["START_TEST"] = "start test";
    AnalyticsEvents["REKEY_TEST"] = "rekey test";
    AnalyticsEvents["END_TEST"] = "end test";
    AnalyticsEvents["APP_LOAD"] = "app load";
    AnalyticsEvents["SLOT_CHANGED"] = "slot changed";
    AnalyticsEvents["SLOT_CHANGE_VIEWED"] = "slot change viewed";
    AnalyticsEvents["NAVIGATION"] = "navigation";
    AnalyticsEvents["REFRESH_JOURNAL"] = "refresh journal";
    AnalyticsEvents["DISPLAY_EARLY_START_MODAL"] = "display early start modal";
    AnalyticsEvents["EXIT_EARLY_START_MODAL_CONTINUE"] = "continue to test from early start modal";
    AnalyticsEvents["EXIT_EARLY_START_MODAL_RETURN"] = "return to journal from early start modal";
    AnalyticsEvents["LOGIN"] = "login";
    AnalyticsEvents["DEFER_WRITE_UP"] = "defer write-up";
    AnalyticsEvents["SAVE_WRITE_UP"] = "save write-up";
    AnalyticsEvents["COMPLETE_TEST"] = "complete test";
    AnalyticsEvents["TEST_DECIDED"] = "test decided";
    AnalyticsEvents["TEST_IN_WRITE_UP"] = "test in write up";
    AnalyticsEvents["TEST_AUTOSAVED"] = "test autosaved";
    AnalyticsEvents["TEST_SUBMITTED"] = "test submitted";
    AnalyticsEvents["COMPLETE_REKEY_TEST"] = "complete rekey test";
    AnalyticsEvents["SUBMIT_TEST"] = "submit test";
    AnalyticsEvents["SUBMIT_REKEY_TEST"] = "submit rekey test";
    AnalyticsEvents["RESUME_WRITE_UP"] = "resume write-up";
    AnalyticsEvents["ADD_DRIVING_FAULT"] = "add driving fault";
    AnalyticsEvents["ADD_SERIOUS_FAULT"] = "add serious fault";
    AnalyticsEvents["ADD_DANGEROUS_FAULT"] = "add dangerous fault";
    AnalyticsEvents["REMOVE_DRIVING_FAULT"] = "remove driving fault";
    AnalyticsEvents["REMOVE_SERIOUS_FAULT"] = "remove serious fault";
    AnalyticsEvents["REMOVE_DANGEROUS_FAULT"] = "remove dangerous fault";
    AnalyticsEvents["REMOVE_FAULT"] = "remove fault";
    AnalyticsEvents["SELECT_SERIOUS_MODE"] = "select serious mode";
    AnalyticsEvents["SELECT_DANGEROUS_MODE"] = "select dangerous mode";
    AnalyticsEvents["SELECT_REMOVE_MODE"] = "select remove mode";
    AnalyticsEvents["APPLICATION_REFERENCE_SEARCH"] = "perform application reference search";
    AnalyticsEvents["DRIVER_NUMBER_SEARCH"] = "perform driver number search";
    AnalyticsEvents["LDTM_SEARCH"] = "perform ldtm search";
    AnalyticsEvents["TOGGLE_LEGAL_REQUIREMENT"] = "toggle legal requirement";
    AnalyticsEvents["TEST_OUTCOME_CHANGED"] = "test outcome changed";
    AnalyticsEvents["TEST_BOOKING_SEARCH"] = "perform test booking search";
    AnalyticsEvents["REVERSE_LEFT_POPOVER_OPENED"] = "open reversing manoeuvre";
    AnalyticsEvents["REVERSE_LEFT_POPOVER_CLOSED"] = "close reversing manoevure";
    AnalyticsEvents["REVERSE_DIAGRAM_OPENED"] = "open reversing diagram";
    AnalyticsEvents["REVERSE_DIAGRAM_CLOSED"] = "close reversing diagram";
    AnalyticsEvents["REVERSE_DIAGRAM_LENGTH_CHANGED"] = "change vehicle length on reversing diagram";
    AnalyticsEvents["REVERSE_DIAGRAM_WIDTH_CHANGED"] = "change vehicle width on reversing diagram";
    AnalyticsEvents["TOGGLE_CODE_78"] = "toggle code 78";
    AnalyticsEvents["TOGGLE_LICENSE_RECEIVED"] = "toggle licence received";
    AnalyticsEvents["D255"] = "set D255";
    AnalyticsEvents["GEARBOX_CATEGORY_CHANGED"] = "set transmission";
    AnalyticsEvents["LANGUAGE_CHANGED"] = "language changed";
    AnalyticsEvents["CBT_CHANGED"] = "cbt changed";
    AnalyticsEvents["BIKE_CATEGORY_CHANGED"] = "bike category changed";
    AnalyticsEvents["BIKE_CATEGORY_SELECTED"] = "bike category selected";
    AnalyticsEvents["BIKE_CATEGORY_MODAL_TRIGGERED"] = "bike category modal triggered";
    AnalyticsEvents["TOGGLE_AVOIDANCE_SPEED_REQUIREMENT"] = "toggle avoidance speed requirement";
    AnalyticsEvents["TOGGLE_EMERGENCY_STOP_SPEED_REQ"] = "toggle emergency stop speed requirement";
    AnalyticsEvents["RECORD_AVOIDANCE_FIRST_ATTEMPT"] = "record avoidance first attempt";
    AnalyticsEvents["RECORD_AVOIDANCE_SECOND_ATTEMPT"] = "record avoidance second attempt";
    AnalyticsEvents["ADD_AVOIDANCE_RIDING_FAULT"] = "add driving fault";
    AnalyticsEvents["ADD_AVOIDANCE_SERIOUS_FAULT"] = "add serious fault";
    AnalyticsEvents["ADD_AVOIDANCE_DANGEROUS_FAULT"] = "add dangerous fault";
    AnalyticsEvents["REMOVE_AVOIDANCE_FAULT"] = "remove driving fault";
    AnalyticsEvents["RECORD_EMERGENCY_STOP_FIRST_ATTEMPT"] = "record emergency stop first attempt";
    AnalyticsEvents["RECORD_EMERGENCY_STOP_SECOND_ATTEMPT"] = "record emergency stop second attempt";
    AnalyticsEvents["ADD_EMERGENCY_STOP_RIDING_FAULT"] = "add driving fault";
    AnalyticsEvents["ADD_EMERGENCY_STOP_SERIOUS_FAULT"] = "add serious fault";
    AnalyticsEvents["ADD_EMERGENCY_STOP_DANGEROUS_FAULT"] = "add dangerous fault";
    AnalyticsEvents["REMOVE_EMERGENCY_STOP_FAULT"] = "remove driving fault";
    AnalyticsEvents["SPEED_REQ_NOT_MET_MODAL_OPENED"] = "speed requirement not met modal opened";
    AnalyticsEvents["EMERGENCY_STOP_DANGEROUS_FAULT_MODAL_OPENED"] = "emergency stop dangerous fault model opened";
    AnalyticsEvents["EMERGENCY_STOP_SERIOUS_FAULT_MODAL_OPENED"] = "emergency stop serious fault model opened";
    AnalyticsEvents["REMOVE_EMERGENCY_STOP_DANGEROUS_FAULT"] = "remove dangerous fault";
    AnalyticsEvents["REMOVE_EMERGENCY_STOP_SERIOUS_FAULT"] = "remove serious fault";
    AnalyticsEvents["PCV_DOOR_EXERCISE_ADD_DRIVING_FAULT"] = "add driving fault";
    AnalyticsEvents["PCV_DOOR_EXERCISE_ADD_SERIOUS_FAULT"] = "add serious fault";
    AnalyticsEvents["PCV_DOOR_EXERCISE_ADD_DANGEROUS_FAULT"] = "add dangerous fault";
    AnalyticsEvents["PCV_DOOR_EXERCISE_REMOVE_DRIVING_FAULT"] = "remove driving fault";
    AnalyticsEvents["PCV_DOOR_EXERCISE_REMOVE_SERIOUS_FAULT"] = "remove serious fault";
    AnalyticsEvents["PCV_DOOR_EXERCISE_REMOVE_DANGEROUS_FAULT"] = "remove dangerous fault";
    AnalyticsEvents["REMOVE_SERIOUS_AVOIDANCE_FAULT"] = "remove serious fault";
    AnalyticsEvents["REMOVE_DANGEROUS_AVOIDANCE_FAULT"] = "remove dangerous fault";
    AnalyticsEvents["ADD_DANGEROUS_SINGLE_FAULT"] = "add dangerous fault";
    AnalyticsEvents["ADD_SERIOUS_SINGLE_FAULT"] = "add serious fault";
    AnalyticsEvents["ADD_SINGLE_FAULT"] = "add driving fault";
    AnalyticsEvents["REMOVE_SINGLE_FAULT"] = "remove driving fault";
    AnalyticsEvents["REMOVE_SERIOUS_SINGLE_FAULT"] = "remove serious fault";
    AnalyticsEvents["REMOVE_DANGEROUS_SINGLE_FAULT"] = "remove dangerous fault";
    AnalyticsEvents["CIRCUIT_CHANGED"] = "circuit changed";
    AnalyticsEvents["INDEPENDENT_DRIVING_TYPE_CHANGED"] = "independent driving type changed";
    AnalyticsEvents["MODE_OF_TRANSPORT_CHANGED"] = "mode of transport changed";
    AnalyticsEvents["TOGGLE_CONTROLLED_STOP"] = "toggle controlled stop";
    AnalyticsEvents["TOGGLE_ECO_PLANNING"] = "toggle ECO planning";
    AnalyticsEvents["TOGGLE_ECO_CONTROL"] = "toggle ECO control";
    AnalyticsEvents["TOGGLE_ETA_VERBAL"] = "toggle ETA verbal";
    AnalyticsEvents["TOGGLE_ETA_PHYSICAL"] = "toggle ETA physical";
    AnalyticsEvents["START_TIMER"] = "start timer";
    AnalyticsEvents["DATE_OF_TEST_CHANGED"] = "date of test changed";
})(AnalyticsEvents || (AnalyticsEvents = {}));
export var AnalyticsLabels;
(function (AnalyticsLabels) {
    AnalyticsLabels["TERMINATE_TEST"] = "Test report - legal requirements not met";
    AnalyticsLabels["SET_ACTIVITY_CODE"] = "Test report - end the test with activity code 4";
})(AnalyticsLabels || (AnalyticsLabels = {}));
export var AnalyticsDimensionIndices;
(function (AnalyticsDimensionIndices) {
    AnalyticsDimensionIndices[AnalyticsDimensionIndices["DEVICE_ID"] = 1] = "DEVICE_ID";
    AnalyticsDimensionIndices[AnalyticsDimensionIndices["JOURNAL_DAYS_FROM_TODAY"] = 2] = "JOURNAL_DAYS_FROM_TODAY";
    AnalyticsDimensionIndices[AnalyticsDimensionIndices["CANDIDATE_WITH_SPECIAL_NEEDS"] = 3] = "CANDIDATE_WITH_SPECIAL_NEEDS";
    AnalyticsDimensionIndices[AnalyticsDimensionIndices["CANDIDATE_WITH_CHECK"] = 4] = "CANDIDATE_WITH_CHECK";
    AnalyticsDimensionIndices[AnalyticsDimensionIndices["CANDIDATE_ID"] = 5] = "CANDIDATE_ID";
    AnalyticsDimensionIndices[AnalyticsDimensionIndices["APPLICATION_REFERENCE"] = 6] = "APPLICATION_REFERENCE";
    AnalyticsDimensionIndices[AnalyticsDimensionIndices["TEST_CATEGORY"] = 7] = "TEST_CATEGORY";
    AnalyticsDimensionIndices[AnalyticsDimensionIndices["USER_ID"] = 11] = "USER_ID";
})(AnalyticsDimensionIndices || (AnalyticsDimensionIndices = {}));
export var JournalRefreshModes;
(function (JournalRefreshModes) {
    JournalRefreshModes["MANUAL"] = "MANUAL";
    JournalRefreshModes["AUTOMATIC"] = "AUTOMATIC";
})(JournalRefreshModes || (JournalRefreshModes = {}));
export var AnalyticsErrorTypes;
(function (AnalyticsErrorTypes) {
    AnalyticsErrorTypes["SUBMIT_FORM_ERROR"] = "submit form error";
    AnalyticsErrorTypes["VALIDATION_ERROR"] = "validation error";
})(AnalyticsErrorTypes || (AnalyticsErrorTypes = {}));
//# sourceMappingURL=analytics.model.js.map