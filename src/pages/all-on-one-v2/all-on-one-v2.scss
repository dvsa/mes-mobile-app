page-all-on-one-v2 {
  .form-section {
    padding: 0;
    margin: 0;
  }
  .form-section all-on-one-form-sub-element-hold-no-modal:not(:last-child) > ion-row,
  .form-section legal-requirements > ion-row:not(:last-child),
  .form-section-small all-on-one-form-sub-element-hold-no-modal:not(:last-child) > ion-row {
    padding: 0;
    margin: 0;
  }

  .action-completed all-on-one-form-sub-element-hold-no-modal .fault-badge.counter {
    left: 30px;
  }
  .form-section-small {
    margin-bottom: 2px;
    padding-bottom: 3px;
  }
  ion-content .button-ios {
    color: map-get($map: $colors, $key: black);
    background-color: map-get($map: $colors, $key: white);
    border: 2px;
    border-style: solid;
    border-color: map-get($map: $colors, $key: black);
    :active {
      background-color: map-get($map: $colors, $key: black);
      color: map-get($map: $colors, $key: white);
    }
  }
  .activated {
    background-color: map-get($map: $colors, $key: black) !important;
    color: map-get($map: $colors, $key: white) !important;
  }
  ion-content {
    background-color: $test-form-background-colour !important;
    button {
      height: $mes-test-form-button-height !important;
      width: 98%;
      background-color: $test-form-button-bg-colour;
      color: $test-form-button-text-colour;
      border: 1.5px solid map-get($colors, shadowGrey) !important;
      box-shadow: 0 2px 0 0 map-get($colors, shadowGrey);
      border-radius: 10px;
      @extend .test-form-label;
    }
  }
  p {
    @extend .test-form-label-bold;
  }
  .bottom-border {
    padding-bottom: 4px;
    margin-bottom: 4px;
    border-bottom: 1px solid map-get($colors, gds-grey-1);
    box-shadow: 0 1px 0 0 map-get($colors, white);
  }
  .sd-buttons-wrapper {
    .sd-buttons {
      background-color: map-get($colors, white) !important;
      box-shadow: 0 2px 0 0 map-get($colors, shadowGrey);
      @extend .test-form-label;
    }
    .s-button.activated {
      border: solid 3.5px map-get($colors, gds-orange);
    }
    .s-button.active {
      border: solid 3.5px map-get($colors, gds-orange) !important;
    }
    .d-button.activated {
      border: solid 3.5px map-get($colors, gds-red);
    }
    .d-button.active {
      border: solid 3.5px map-get($colors, gds-red) !important;
    }
  }
  .expanded-section-in-column button:first-child {
    margin-bottom: 10px;
  }
  .intersection {
    height: 100px;
    background-color: gray;
  }
  .no-margin-bottom {
    margin-bottom: 0px;
  }
  .no-padding-bottom {
    padding-bottom: 0px;
  }
  .expanded-section {
    background-color: map-get($map: $colors, $key: expanderBg);
    margin-left: -16px;
    padding-left: 16px;
    margin-right: -16px;
    padding-right: 16px;
    /* css animation */
    overflow: hidden;
    padding: 0 1em;
    max-height: 0;
    opacity: 0;
    transition: all 0.3s ease;
    .manoeuvre-header {
      text-align: left;
      display: flex;
      align-content: center;
      justify-content: center;
      flex-direction: column;
      font-weight: bold;
    }
  }
  .content-open {
    max-height: 500px;
    opacity: 1;
    padding: 15px 20px;
    margin: 0 8px 8px 0;
  } // Ugly workaround for fitting all competencies together with Manoeuvre row
  .margin-top-for-manoeuvre-closed {
    margin-top: -8px;
  }
  // This is equivalent to flex: 0 0 auto. It sizes the item according to its width/height properties, but makes it fully inflexible.
  // This is similar to flex: initial except it is not allowed to shrink, even in an overflow situation.
  .flex-none {
    flex: none;
  }
  .full-page {
    height: 100%;
    overflow: hidden;
  }
  .side-paddings {
    padding: 0 16px;
  }
  .scroll {
    overflow: scroll;
  }
  .man-faults {
    width: 200px;
    position: relative;
    top: 95px;
    left: 33%;
    opacity: 0.2;
    &.active {
      opacity: 1;
      display: block;
      transition: all 0.3s ease;
    }
    all-on-one-form-sub-element-hold-no-modal {
      display: inline-block;
      width: 259px;
    }
  }
  div label input {
    margin-right: 100px;
  }
  body {
    font-family: sans-serif;
  }
  .check-btn {
    width: 98%;
    margin: 10px 0;
    overflow: auto;
    display: block;
  }
  .check-btn label span {
    background: lighten(map-get($colors, expanderBg), 15);
    border: 1px solid darken(map-get($colors, expanderBg), 5);
    text-align: left;
    padding: 20px 15px;
    display: block;
    border-radius: 5px;
  }
  .check-btn label input {
    display: none;
    position: absolute;
    top: -20px;
  }
  .check-btn input:checked + span {
    color: map-get($map: $colors, $key: white);
    background: map-get($colors, gds-blue);
    position: relative;
    &:after {
      top: 13px;
      right: 15px;
      font-size: 1em;
      @extend .check-btn_completed;
    }
  }
}
