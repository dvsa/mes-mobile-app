.popover {
  ion-grid {
    border: 0px none #fdfeff !important;
  }
  background-color: map-get($colors, "mes-white");
  height: 235px;
  width: calc(100% - #{$report-mode-border-width * 2});
  left: 6px;
  margin-top: 9px;
  position: fixed;
  z-index: 170;
  .gds-checkbox {
    // Completely hide the original input
    position: absolute;
    opacity: 0;
  
    $checkbox-width-height: 36px;
    $checkbox-border: 2px;
    $checkbox-border-invalid: 4px;
  
    width: $checkbox-width-height;
    height: $checkbox-width-height;
  
    & + label {
      position: relative;
      display: inline-block;
      padding: 0;
      letter-spacing: -1px;
    }
  
    // Draw the checkbox itself
    & + label:before {
      content: "";
      margin-right: 12px;
      display: inline-block;
      vertical-align: middle;
      width: $checkbox-width-height;
      height: $checkbox-width-height;
      background: white;
      border: $checkbox-border solid #222222;
      border-radius: 6px;
      box-shadow: inset 0 3px 3px 0 rgba(165, 162, 162, 0.78);
    }
  
    &:checked + label:before {
      background: #fcf8c8;
    }
  
    &.ng-dirty {
      &.ng-invalid + label:before {
        // Accommodate for the extra border
        $checkbox-width-height-invalid: $checkbox-width-height - $checkbox-border-invalid;
  
        border: $checkbox-border-invalid solid map-get($colors, "mes-validation-error");
        width: $checkbox-width-height-invalid;
        height: $checkbox-width-height-invalid;
      }
    }
  
    &:checked + label:after {
      $checkmark-size: 24px;
      $checkmark-offset: 14px;
      content: "";
      background: url("/assets/imgs/checkmark.png") no-repeat;
      background-size: $checkmark-size $checkmark-size;
      position: absolute;
      left: $checkmark-offset;
      top: $checkmark-offset;
      width: $checkmark-size;
      height: $checkmark-size;
    }
  }
}

